import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# C·∫•u h√¨nh trang
st.set_page_config(page_title="Ph√¢n T√≠ch B·ªánh Ph·ªïi", page_icon="ü´Å", layout="wide")

@st.cache_data
def load_data():
    df = pd.read_csv('lung_disease_data_cleaned.csv', sep=',')
    return df

# B·∫£ng m√†u th√¢n thi·ªán v·ªõi ng∆∞·ªùi m√π m√†u
COLOR_PALETTE = [
    '#1F77B4',  # Xanh d∆∞∆°ng
    '#FF7F0E',  # Cam
    '#2CA02C',  # Xanh l√°
    '#D62728',  # ƒê·ªè
    '#9467BD',  # T√≠m
    '#8C564B',  # N√¢u
    '#E377C2',  # H·ªìng
    '#7F7F7F',  # X√°m
]

def plot_recovery_by_disease(df, chart_type='pie'):
    # T√≠nh t·ª∑ l·ªá ph·∫ßn trƒÉm ph·ª•c h·ªìi theo lo·∫°i b·ªánh
    recovery_rates = df.groupby('Lo·∫°i B·ªánh')['Ph·ª•c H·ªìi'].value_counts(normalize=True).unstack() * 100
    
    if chart_type == 'stacked':
        # Stacked bar chart
        plt.figure(figsize=(10, 6))
        recovery_rates.plot(kind='bar', stacked=True, color=['#FF6B6B', '#4ECDC4'])
        plt.title('T·ª∑ l·ªá ph·ª•c h·ªìi theo lo·∫°i b·ªánh', fontsize=14, pad=15)
        plt.xlabel('Lo·∫°i b·ªánh', fontsize=12)
        plt.ylabel('T·ª∑ l·ªá (%)', fontsize=12)
        plt.legend(title='Ph·ª•c H·ªìi', loc='center left', bbox_to_anchor=(1.0, 0.5))
        plt.xticks(rotation=45, ha='right')
        plt.yticks(ticks=range(0, 101, 10), labels=[f"{i}%" for i in range(0, 101, 10)])
        plt.tight_layout()
    else:  # default to pie chart
        # Pie chart cho t·ª´ng lo·∫°i b·ªánh
        fig, axes = plt.subplots(2, 3, figsize=(15, 10))  #
        axes = axes.flatten()  
        diseases = recovery_rates.index
        for idx, disease in enumerate(diseases):
            if idx < len(axes):
                axes[idx].pie(recovery_rates.loc[disease], labels=recovery_rates.columns,
                             autopct='%1.1f%%', colors=['#FF6B6B', '#4ECDC4'], startangle=90)
                axes[idx].set_title(f'{disease}', fontsize=10)
        for idx in range(len(diseases), len(axes)):
            axes[idx].axis('off')
        plt.suptitle('T·ª∑ l·ªá ph·ª•c h·ªìi theo lo·∫°i b·ªánh', fontsize=14, y=1.05)
        plt.tight_layout()
    
    return plt

# H√†m t·∫°o bi·ªÉu ƒë·ªì ·∫£nh h∆∞·ªüng c·ªßa h√∫t thu·ªëc (stacked bar chart ho·∫∑c pie chart)
def plot_smoking_impact(df, chart_type='stacked'):
    # T√≠nh t·ª∑ l·ªá ph·∫ßn trƒÉm ph·ª•c h·ªìi theo t√¨nh tr·∫°ng h√∫t thu·ªëc
    smoking_impact = df.groupby('T√¨nh Tr·∫°ng H√∫t Thu·ªëc')['Ph·ª•c H·ªìi'].value_counts(normalize=True).unstack() * 100
    
    if chart_type == 'stacked':
        # Stacked bar chart
        plt.figure(figsize=(8, 6))
        smoking_impact.plot(kind='bar', stacked=True, color=['#FF6B6B', '#4ECDC4'])
        plt.title('·∫¢nh h∆∞·ªüng c·ªßa h√∫t thu·ªëc ƒë·∫øn kh·∫£ nƒÉng ph·ª•c h·ªìi', fontsize=14, pad=15)
        plt.xlabel('T√¨nh tr·∫°ng h√∫t thu·ªëc', fontsize=12)
        plt.ylabel('T·ª∑ l·ªá (%)', fontsize=12)
        plt.legend(title='Ph·ª•c H·ªìi', loc='center left', bbox_to_anchor=(1.0, 0.5))
        plt.xticks(rotation=0)
        # Chia tr·ª•c y th√†nh 10 kho·∫£ng t·ª´ 0% ƒë·∫øn 100%
        plt.yticks(ticks=range(0, 101, 10), labels=[f"{i}%" for i in range(0, 101, 10)])
        plt.tight_layout()
        return plt
    else:  # Pie chart
        fig, axes = plt.subplots(1, 2, figsize=(12, 6))
        for idx, smoking_status in enumerate(smoking_impact.index):
            axes[idx].pie(smoking_impact.loc[smoking_status], labels=smoking_impact.columns,
                          autopct='%1.1f%%', colors=['#FF6B6B', '#4ECDC4'], startangle=90)
            axes[idx].set_title(f'T√¨nh tr·∫°ng: {smoking_status}', fontsize=12)
        plt.suptitle('·∫¢nh h∆∞·ªüng c·ªßa h√∫t thu·ªëc ƒë·∫øn kh·∫£ nƒÉng ph·ª•c h·ªìi', fontsize=14, y=1.05)
        plt.tight_layout()
        return plt

# H√†m ch√≠nh
def main():
    st.title('Ph√¢n t√≠ch d·ªØ li·ªáu b·ªánh ph·ªïi')
    
    # ƒê·ªçc d·ªØ li·ªáu
    df = load_data()
    if df is None:
        return
    
    # Sidebar ƒë·ªÉ t√πy ch·ªânh
    st.sidebar.header('T√πy ch·ªânh bi·ªÉu ƒë·ªì')
    chart_options_1 = ['stacked', 'pie']
    chart_options_2 = ['stacked', 'pie']
    
    # T√πy ch·ªçn cho bi·ªÉu ƒë·ªì 
    chart_type_1 = st.sidebar.selectbox('Ch·ªçn lo·∫°i bi·ªÉu ƒë·ªì cho "T·ª∑ l·ªá ph·ª•c h·ªìi theo lo·∫°i b·ªánh:', 
                                       chart_options_2, index=0)
    chart_type_2 = st.sidebar.selectbox('Ch·ªçn lo·∫°i bi·ªÉu ƒë·ªì cho "·∫¢nh h∆∞·ªüng c·ªßa h√∫t thu·ªëc":', 
                                       chart_options_2, index=0)
    
    # Hi·ªÉn th·ªã d·ªØ li·ªáu c∆° b·∫£n
    st.subheader('D·ªØ li·ªáu m·∫´u')
    st.write(df.head())
    
    # C√¢u h·ªèi 1
    st.subheader('C√¢u h·ªèi 1: T·ª∑ l·ªá ph·ª•c h·ªìi theo lo·∫°i b·ªánh')
    st.write("""
    Ph√¢n t√≠ch n√†y gi√∫p ch√∫ng ta hi·ªÉu lo·∫°i b·ªánh n√†o c√≥ kh·∫£ nƒÉng ph·ª•c h·ªìi cao h∆°n,
    t·ª´ ƒë√≥ ƒë∆∞a ra chi·∫øn l∆∞·ª£c ƒëi·ªÅu tr·ªã ph√π h·ª£p.
    """)
    fig1 = plot_recovery_by_disease(df, chart_type_1)
    if fig1:
        st.pyplot(fig1)
    
    # Th√™m kho·∫£ng c√°ch gi·ªØa c√°c bi·ªÉu ƒë·ªì
    st.markdown("---")
    
    # C√¢u h·ªèi 2
    st.subheader('C√¢u h·ªèi 2: ·∫¢nh h∆∞·ªüng c·ªßa h√∫t thu·ªëc ƒë·∫øn kh·∫£ nƒÉng ph·ª•c h·ªìi')
    st.write("""
    Ph√¢n t√≠ch n√†y xem x√©t m·ªëi quan h·ªá gi·ªØa t√¨nh tr·∫°ng h√∫t thu·ªëc v√† kh·∫£ nƒÉng ph·ª•c h·ªìi.
    """)
    fig2 = plot_smoking_impact(df, chart_type_2)
    if fig2:
        st.pyplot(fig2)
    
    # Th·ªëng k√™ c∆° b·∫£n
    st.subheader('Th·ªëng k√™ c∆° b·∫£n')
    st.write(df.describe())

if __name__ == '__main__':
    main()